<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.9 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-yg3bp-ccamp-network-inventory-yang-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="10"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management
  and was specified many years ago. Given the emerging of data models and 
  their deployment in operator's management and control systems, the traditional function of inventory management
  is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part for 
  ensuring the network stays healthy, well-planned, and functioning 
  in the operator's network. Network inventory management allows the
  operator to keep track of what physical network devices are staying
  in the network including relevant software and hardware versions.</t>

<t>The network inventory management also helps the operator to know when 
  to acquire new assets and what is needed, or to decommission old or faulty ones, 
  which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial network hardware inventory information available at domain controller level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the domain controller South Bound Interface (SBI) towards the network elements rather than at the domain controller's northbound. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model presented in this draft.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements as defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analysed at the present stage to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines one YANG module: ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<t>Note: review in future versions of this document the related modules, depending on the augmentation relationship.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF-MTOSI"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="ni-tree"/> of this document.
The meaning of the symbols in this diagram is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="RFC8348"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFC XXXX</c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF-MTOSI"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\                             
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, there is no direct relationship between the rack and network element. In some cases, one network element contains multiple racks while in other cases one rack contains several shelves belonging to one or more network elements.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a network element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from all the network elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely implemented with systems. It is guaranteed to be globally unique.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when performing maintenance operations.</t>

<t>Location: location is a common management requirement of operators. This location could be an absolute position (e.g. mailing address), or a relative position (e.g. port index). Different types of inventory objects may require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-inventory
   +--ro network-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-from-rfc8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro children* [child-ref]
        |  +--ro child-ref    leafref
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>But we re-defined some attributes listed in <xref target="RFC8348"/>, based on some integration experience for network wide inventory data.</t>

</section>
<section anchor="changes-with-respect-to-rfc8348"><name>Changes with respect to RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided a "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher level component in the hierarchy, they need to retrieve this parent-ref step by step. To reduce this iterative work, we decided to provide a list of hierarchical parent components' identifier references.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" attribute is used to order the list by the hierarchical relationship from topmost component (with the "index" set to 0) to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component-specific and are not suitable to define under the component list node. So, we defined a choice-case structure for this component-specific extension, as follows:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The detail of each *-specific-info YANG container is still under discussion, and the leaf attributes will be defined in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. "Model-name" is not straightforward to understand and we suggest to rename it as "part-number" directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attributes mentioned in above section, rack could have some specific attributes, such as appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please consider that the door of the rack is facing the user):</t>

<figure title="height, width and depth of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The rack attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some of the attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. These attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: Not all the attributes defined in <xref target="RFC8348"/> are applicable for network element. And there could also be some missing attributes which are not recognized by <xref target="RFC8348"/>. More extensions could be introduced in later revisions after the missing attributes are fully discussed.</t>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During  the integration with OSS in some operators, some efficiency/scalability concerns have been discovered when synchronizing network inventory data for big networks.  More discussions are needed to address these concerns.</t>

<t>Considering that relational databases are widely used by traditional OSS systems and also by some network controllers, the inventory objects are most likely to be saved in different tables. With the model defined in current draft, when doing a full synchronization, network controller needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the network controller &amp; OSS/MDSC processing, which may result in efficiency/scalability limitations in large scale networks.</t>

<t>An alternative YANG model structure, which defines the inventory objects directly, instead of defining generic components, has also been analyzed. However, also with this model, there still could be some scalability limitations when synchronizing full inventory resources in large scale of networks. This scalability limitation is caused by the limited transmission capabilities of HTTP protocol. We think that this scalability limitation should be solved at protocol level rather than data model level.</t>

<t>The model proposed by this draft is designed to be as generic as possible so to cover future special types of inventory objects that could be used in other technologies, that have not been identified yet. If the inventory objects were to be defined directly with fixed hierarchical relationships in YANG model, this new type of inventory objects needs to be manually defined, which is not a backward compatible change and therefore is not an acceptable approach for implementation. With a generic model, it is only needed to augment a new component class and extend some specific attributes for this new inventory component class, which is more flexible. We consider that this generic data model, enabling a flexible and backward compatible approach for other technologies, represents the main scope of this draft. Solution description to efficiency/scalability limitations mentioned above is considered as out-of-scope.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of the network-element container.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and having a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analysed so far to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical.</t>

</section>
</section>
<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-inventory.tree"><![CDATA[
module: ietf-network-inventory
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro rack-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref           leafref
     |              +--ro component-ref    leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro firmware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-references
                 |  +--ro equipment-room-uuid?    leafref
                 |  +--ro ne-uuid?                leafref
                 |  +--ro rack-uuid?              leafref
                 |  +--ro component-references
                 |     +--ro component-reference* [index]
                 |        +--ro index    uint8
                 |        +--ro class?   -> ../../../../class
                 |        +--ro uuid?    -> ../../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info
]]></artwork></figure>

</section>
<section anchor="ni-yang"><name>YANG Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-inventory@2022-07-11.yang"><![CDATA[
module ietf-network-inventory {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-network-inventory";
  prefix ni;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "RFC 8348: A YANG Data Model for Hardware Management.";
  }
  
  import ietf-inet-types {
    prefix inet;
  } 
  
  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2022-07-11 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-01: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2022-03-04 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-00: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2021-11-09 {
    description
      "version 2.0.0";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }

  revision 2021-10-25 {
    description
      "Initial revision.";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }
  
  container network-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "To be added.";
          leaf-list equipment-room-name {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "To be added.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf firmware-rev {
      type string;
      description
        "The vendor-specific firmware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "To be added.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element/ni:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element[ni:uuid"
                  + "=current()/../ne-ref]/ni:components"
                  + "/ni:component/ni:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "To be added.";
    container rack-location {
      description
        "To be added.";
      leaf equipment-room-name {
        type leafref {
          path "/ni:network-inventory/ni:equipment-rooms"
          + "/ni:equipment-room/ni:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf rack-number {
      type uint32;
      description
        "An integer identifier of rack.";
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "To be added.
            
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../ni:uuid";
          }
          description
            "The child components' identifier that are physically 
            contained by this component.";          
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "To be added.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        container parent-references {
          description
            "To be added.";
          leaf equipment-room-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf ne-uuid {
            type leafref {
              path "/ni:network-inventory/ni:network-elements/" +
                   "ni:network-element/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf rack-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:racks/ni:rack/ni:uuid";
            }
            description
              "To be added.";
          }
          container component-references {
            description
              "To be added.";
            list component-reference {
              key index;
              description
                "this list object is used to indicate its
                hierarchial parent components' identifier.
                This hierarchial relation can be found by index 
                parameter. The topest parent component should be 
                0-index.";
              leaf index {
                type uint8;
                description
                  "To be added.";
              }
              leaf class {
                type leafref {
                  path "../../../../ni:class";
                }
                description
                  "To be added.";
              }
              leaf uuid {
                type leafref {
                  path "../../../../ni:uuid";
                }
                description
                  "To be added.";
              }
            }
          }
        }
        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "To be added.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container contains some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container contains some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./ni:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container contains some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./ni:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container contains some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
}
]]></sourcecode></figure>

</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF-MTOSI" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>TMF MTOSI 4.0 Equipment Model</title>
    <author >
      <organization>TM Forum (TMF)</organization>
    </author>
    <date year="2008"/>
  </front>
  <seriesInfo name="TMF SD2-20_EquipmentModel" value=""/>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini' initials='F.' surname='Peruzzini'>
         <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier' initials='J.' surname='Bouquier'>
         <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi' initials='I.' surname='Busi'>
         <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King' initials='D.' surname='King'>
         <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli' initials='D.' surname='Ceccarelli'>
         <organization>Ericsson</organization>
      </author>
      <date day='10' month='July' year='2022'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models being defined by the IETF to support
   this deployment architecture and specific scenarios relevant for
   Service Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-07'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-actn-poi-applicability-07.txt' type='TXT'/>
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>


  </back>

<!-- ##markdown-source:
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
bLS3a2Yzfo2NnV0XjQhr7Pjwk6qdSMhSkW/wbT1Yath8W0s2zL6tJRsm3c6S
NTNshxXW1mqose0wGxu0Kttacsl5wyzcgZLbUz0rwfDXOABtQZxxPU1HkBBP
dH4Pz0OFdW2M8kRfCmeHxmH9Juh6nM+y5E8d7fLAMV6co6JubAKO7SJROdUY
YlR6C3Jj5GLxtFK7sEDv2O90he5DajcpJxxD+HgKSjiatdfirCxXstc75Vxe
ylnKGsDJOoT24ERZx31TjTRNDcpxnOocChTCXQCApPyTt6r2k0XfJ7Q4l+ts
PC9ywAf23OKhirMwSszrsi8YU3Z7rAxDJq2D8mRRgUcajoZDdmwdrOOU+hqR
yzM2pry1yNKGXNHJyeaaxmkPSgSwZlzoMVh/V5XVrekWg92QJS5NXmFf7GdV
ArJomp3DOSTG0okLa7jLjlcFlaSUKSpNziQnUqDZdxAd896sCSfhr+ScIQBr
wQunCba2ZVw85rg6axwzA6PAxMUIjWgALpocZ+xISxWMOzca04xlg6LY2GxG
zkcY1FhyyHopOY8GIh5oAY8o2DjqPHCg5xi1dchyRwoIBQUyYASPRbQOD3Rz
ueB86MKBObniTkbkbA18mZpAxOOBBc9xsljG48pPk+cg/r/iQAY0CuCBY0mL
WB/nsPNUuUrpDKVlqVG6LpWwgjhEgWIdCtjMSuith1HRwCsyPjPR0aKYqkWb
K3WvOoFImHK1IeXQ9cMzHuc6FMJK+UPyV1eMUmetARboZHGhl8oOTQmTACzt
oMk2McMN2YzQMvoAW6EFYAdhcsj6mHKSuSg3unAnuPUfx4YzkPVdZUtzA/0x
cR7VTdjN7aerq+c4v1U+zlNYzHSGlb3SJob27mwenTJPrznXj25HnbO52Z8c
vwN6qdKq6CxLKqMQQa6TLHHAuQ355exeJqTFSfAFk2SSCin3eR3J0uEAGMji
Z6JMKieR9SGXJHmBwpKIxckauJYY4OLnRtO93EiTXkCzRk2oTFkczd56PEIE
YRfFoQ5xuKGhhUdmuA4HzK7IUVf1fmh9f3EwsRiBWk02TFwZ0C0idEyHxX7S
MFUDVsoYs6BwSkLtDYLysB6PoUSDzaSkBsDJxyhHgiMcOb2MCv61DJL4JtvY
OCtSm7nOHmnUo4e9ppzhkwVymsrXOGQifd/AlpSBLFCHnB5PiTFVnSAMYbKG
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
szNqbYd8IBgJDfAOTL/vnO4p7LTePZtRNvR9wjWRCjq6ZMli7qcerW0LNg8y
B9gXyo3OZCrEO18yPA8DEgLlYH8ObD+V+7YFTYGqc3sFJ1/QYNIzxtkaLTFi
Ym59tm2oumkylVjGqA/4OZtiTmt9rxg0RPG+7Lyj3KNVameQ8Zx8AB5RIduI
yTmMmyZyI0ZbuU2MqRqtXSdNDtu2CbrALDh5rqfXtnMo9mLQJl+T7HYfBxwF
Q11y0sytOzOLLVY1iWpCTok6mbMtpeZRN+GSkU87dezgnxp3aOUmXezhqh58
Eb7RqzQ9Nzmuyer8pnspXalE03W+qrO/tHYoVFoHz9ntjW0Z9d8aG2mBQMHQ
1iOpZfVb5RwgFMNuY8BOORdD5oTUhbcVPASQ/XsnE9ikuZ0zWUYEe+Bctd68
old15OG/E7D7AP1zb5Alw4bUxIee4Brsic8b+3ECtlGWmsT8AN/WK7yr/2wd
PrR5oa/DqgsZ8h0vWJPG2AaVRRW91P0m1B1ImfGAjLGGcXBW9WiPq3Ll+y14
XXsT4QzmnUcdMOE1w6ov801BexrbLPLOW+L+Gm/ponONB6iK2Jx7uvM+4hHX
E9/ubZ3YjFnSaJrclFnyF4+DXN49K/pYsOg2d4XFPXn6WLDoNneFRZ9E7SD6
sHstgVRun9U0JsNTYUT1xeO23mhbGtDVaic+7T3rXa3t1blVr2WQzoHZx8I3
W+s434hN9KRwbu/Gc5a2jXABKNm2YpOlKAVGpdrw86U4rTipU9wwIUqTnVBm
cXXXLvIxMvKESdB1AvloNEiNakNGg/6CM+O4mLwPGEk2QbOGCleyACE46oZS
agyZmbeNamGBbRur3bWcNkZvRbjX14fpOO1yJSDXP4KG0xChH0fBIbIIKzYh
suiAVnCGtbhwrqh0sqs7WdvVhJF/dr2FwM0BMV/Gp+JMaymPprlXvY4jFx2O
cLdTynfxfLgyhzNEeRU85Sww0519eDOurgriecYNa210fV8v23bGTVnyrtmo
4pgRNrw2m7ooDngv5Mnpw9qJBA8NujeNCM6Z0GyRTQPceQOyTVo0fjZo0v4W
aS/Uxuf1BlRZfISE0AS6oU5vxI3CTi3TaGCTp6cr7FzCck8h1qYbbMLXgI6w
XPej/Zsh+zeN7JYq91UI9+0D9JdignmJ7Vg9vqs3ey36J5jUxhTpVdA2pz4V
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
AAA=

-->

</rfc>

