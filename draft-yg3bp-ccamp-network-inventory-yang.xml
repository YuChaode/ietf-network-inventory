<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.9 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-yg3bp-ccamp-network-inventory-yang-02" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </author>

    <date year="2022" month="August" day="09"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management
  and was specified many years ago. Given the emerging of data models and 
  their deployment in operator's management and control systems, the traditional function of inventory management
  is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part for 
  ensuring the network stays healthy, well-planned, and functioning 
  in the operator's network. Network inventory management allows the
  operator to keep track of what physical network devices are staying
  in the network including relevant software and hardware versions.</t>

<t>The network inventory management also helps the operator to know when 
  to acquire new assets and what is needed, or to decommission old or faulty ones, 
  which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial network hardware inventory information available at domain controller level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the domain controller South Bound Interface (SBI) towards the network elements rather than at the domain controller's northbound. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model presented in this draft.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements as defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analysed at the present stage to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines one YANG module: ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<t>Note: review in future versions of this document the related modules, depending on the augmentation relationship.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF-MTOSI"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="ni-tree"/> of this document.
The meaning of the symbols in this diagram is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="RFC8348"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFC XXXX</c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF-MTOSI"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\                             
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, there is no direct relationship between the rack and network element. In some cases, one network element contains multiple racks while in other cases one rack contains several shelves belonging to one or more network elements.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a network element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from all the network elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely implemented with systems. It is guaranteed to be globally unique.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when performing maintenance operations.</t>

<t>Location: location is a common management requirement of operators. This location could be an absolute position (e.g. mail address), or a relative position (e.g. port index). Different types of inventory objects may require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-inventory
   +--ro network-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-from-rfc8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro children* [child-ref]
        |  +--ro child-ref    leafref
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>But we re-defined some attributes listed in <xref target="RFC8348"/>, based on some integration experience for network wide inventory data.</t>

</section>
<section anchor="changes-with-respect-to-rfc8348"><name>Changes with respect to RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided a "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher level component in the hierarchy, they need to retrieve this parent-ref step by step. To reduce this iterative work, we decided to provide a list of hierarchical parent components' identifier references.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" attribute is used to order the list by the hierarchical relationship from topmost component (with the "index" set to 0) to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component-specific and are not suitable to define under the component list node. So, we defined a choice-case structure for this component-specific extension, as follows:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The detail of each *-specific-info YANG container is still under discussion, and the leaf attributes will be defined in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. "Model-name" is not straightforward to understand and we suggest to rename it as "part-number" directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attributes mentioned in above section, rack could have some specific attributes, such as appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please consider that the door of the rack is facing the user):</t>

<figure title="height, width and depth of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The rack attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. Includes:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: the attributes of network element are still under discussion.</t>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During  the integration with OSS in some operators, some efficiency/scalability concerns have been discovered when synchronizing network inventory data for big networks.  More discussions are needed to address these concerns.</t>

<t>Considering that relational databases are widely used by traditional OSS systems and also by some network controllers, the inventory objects are most likely to be saved in different tables. With the model defined in current draft, when doing a full synchronization, network controller needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the network controller &amp; OSS/MDSC processing, which may result in efficiency/scalability limitations in large scale networks.</t>

<t>An alternative YANG model structure, which defines the inventory objects directly, instead of defining generic components, has also been analyzed. However, also with this model, there still could be some scalability limitations when synchronizing full inventory resources in large scale of networks. This scalability limitation is caused by the limited transmission capabilities of HTTP protocol. We think that this scalability limitation should be solved at protocol level rather than data model level.</t>

<t>In case there are some other special types of inventory objects that could be used in other technologies and have not been considered by us, we would like to provide a generic model. If we define the inventory objects directly and give them fix hierarchical relationships in YANG model, once there is a new type of inventory object that needs to be introduced into the model, we need to break down our YANG model and insert the new one, this is not a backward compatible change and therefore is not an acceptable approach for implementation. With a generic model, we only need to augment a new component class and extend some specific attributes for this new inventory component class, which is more flexible. We consider this compatible issue is prior to the efficiency issue mentioned above, therefore, we continue to work on the current model.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of the network-element container.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and having a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analysed so far to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical.</t>

</section>
</section>
<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-inventory.tree"><![CDATA[
module: ietf-network-inventory
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro rack-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref           leafref
     |              +--ro component-ref    leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro firmware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-references
                 |  +--ro equipment-room-uuid?    leafref
                 |  +--ro ne-uuid?                leafref
                 |  +--ro rack-uuid?              leafref
                 |  +--ro component-references
                 |     +--ro component-reference* [index]
                 |        +--ro index    uint8
                 |        +--ro class?   -> ../../../../class
                 |        +--ro uuid?    -> ../../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info
]]></artwork></figure>

</section>
<section anchor="ni-yang"><name>YANG Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-inventory@2022-07-11.yang"><![CDATA[
module ietf-network-inventory {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-network-inventory";
  prefix ni;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "RFC 8348: A YANG Data Model for Hardware Management.";
  }
  
  import ietf-inet-types {
    prefix inet;
  } 
  
  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2022-07-11 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-01: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2022-03-04 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-00: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2021-11-09 {
    description
      "version 2.0.0";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }

  revision 2021-10-25 {
    description
      "Initial revision.";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }
  
  container network-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "To be added.";
          leaf-list equipment-room-name {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "To be added.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf firmware-rev {
      type string;
      description
        "The vendor-specific firmware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "To be added.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element/ni:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element[ni:uuid"
                  + "=current()/../ne-ref]/ni:components"
                  + "/ni:component/ni:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "To be added.";
    container rack-location {
      description
        "To be added.";
      leaf equipment-room-name {
        type leafref {
          path "/ni:network-inventory/ni:equipment-rooms"
          + "/ni:equipment-room/ni:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf rack-number {
      type uint32;
      description
        "An integer identifier of rack.";
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "To be added.
            
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../ni:uuid";
          }
          description
            "The child components' identifier that are physically 
            contained by this component.";          
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "To be added.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        container parent-references {
          description
            "To be added.";
          leaf equipment-room-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf ne-uuid {
            type leafref {
              path "/ni:network-inventory/ni:network-elements/" +
                   "ni:network-element/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf rack-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:racks/ni:rack/ni:uuid";
            }
            description
              "To be added.";
          }
          container component-references {
            description
              "To be added.";
            list component-reference {
              key index;
              description
                "this list object is used to indicate its
                hierarchial parent components' identifier.
                This hierarchial relation can be found by index 
                parameter. The topest parent component should be 
                0-index.";
              leaf index {
                type uint8;
                description
                  "To be added.";
              }
              leaf class {
                type leafref {
                  path "../../../../ni:class";
                }
                description
                  "To be added.";
              }
              leaf uuid {
                type leafref {
                  path "../../../../ni:uuid";
                }
                description
                  "To be added.";
              }
            }
          }
        }
        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "To be added.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container contains some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container contains some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./ni:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container contains some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./ni:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container contains some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
}
]]></sourcecode></figure>

</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF-MTOSI" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>TMF MTOSI 4.0 Equipment Model</title>
    <author >
      <organization>TM Forum (TMF)</organization>
    </author>
    <date year="2008"/>
  </front>
  <seriesInfo name="TMF SD2-20_EquipmentModel" value=""/>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini'>
	 <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier'>
	 <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli'>
	 <organization>Ericsson</organization>
      </author>
      <date day='10' month='July' year='2022'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models being defined by the IETF to support
   this deployment architecture and specific scenarios relevant for
   Service Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-07'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-actn-poi-applicability-07.txt' type='TXT'/>
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>


  </back>

<!-- ##markdown-source:
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
SOOwN3avfFXEC7zkCcr+XzgJASS7xgAA

-->

</rfc>

