<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.9 (Ruby 2.7.0) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-yg3bp-ccamp-network-inventory-yang-01" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </author>

    <date year="2022" month="October" day="04"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management
  and was specified many years ago. Given the emerging of data models and 
  their deployment in operator's management and control systems, the traditional function of inventory management
  is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part for 
  ensuring the network stays healthy, well-planned, and functioning 
  in the operator's network. Network inventory management allows the
  operator to keep track of what physical network devices are staying
  in the network including relevant software and hardware versions.</t>

<t>The network inventory management also helps the operator to know when 
  to acquire new assets and what is needed, or to decommission old or faulty ones, 
  which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial network hardware inventory information available at domain controller level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the domain controller South Bound Interface (SBI) towards the network elements rather than at the domain controller's northbound. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model presented in this draft.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements as defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analysed at the present stage to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines one YANG module: ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<t>Note: review in future versions of this document the related modules, depending on the augmentation relationship.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF-MTOSI"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipment of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="ni-tree"/> of this document.
The meaning of the symbols in this diagram is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="RFC8348"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFC XXXX</c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF-MTOSI"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\                             
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>Considering there are some special scenarios, there is no direct relationship between the rack and network element. In some cases, one network element contains multiple racks while in other cases one rack contains several shelves belonging to one or more network elements.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a network element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from all the network elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid           yang:uuid
     |           ...................................
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<section anchor="common-design-for-all-inventory-objects"><name>Common Design for All Inventory Objects</name>

<t>For all the inventory objects, there are some common attributes existing. Such as:</t>

<t>Identifier: here we suggest to use uuid format which is widely implemented with systems. It is guaranteed to be globally unique.</t>

<t>Name: name is a human-readable label information which could be used to present on GUI. This name is suggested to be provided by server.</t>

<t>Alias: alias is also a human-readable label information which could be modified by user. It could also be present on GUI instead of name.</t>

<t>Description: description is a human-readable information which could be also input by user. Description provides more detailed information to prompt users when performing maintenance operations.</t>

<t>Location: location is a common management requirement of operators. This location could be an absolute position (e.g. mail address), or a relative position (e.g. port index). Different types of inventory objects may require different types of position.</t>

<figure><artwork type="ascii-art"><![CDATA[
module: ietf-network-inventory
   +--ro network-inventory
      +--ro equipment-rooms
      |  +--ro equipment-room* [uuid]
      |     +--ro uuid           yang:uuid
      |     +--ro name?          string
      |     +--ro description?   string
      |     +--ro alias?         string
      |     +--ro location?      string
      |     ...................................
      |     +--ro racks
      |        +--ro rack* [uuid]
      |           +--ro uuid                 yang:uuid
      |           +--ro name?                string
      |           +--ro description?         string
      |           +--ro alias?               string
      |           +--ro rack-location
      |           |  +--ro equipment-room-name?   leafref
      |           |  +--ro row-number?            uint32
      |           |  +--ro column-number?         uint32
      |           ...................................
      +--ro network-elements
         +--ro network-element* [uuid]
            +--ro uuid             yang:uuid
            +--ro name?            string
            +--ro description?     string
            +--ro alias?           string
            +--ro ne-location
            |  +--ro equipment-room-name*   leafref
            ...................................
            +--ro components
               +--ro component* [uuid]
                  +--ro uuid                     yang:uuid
                  +--ro name?                    string
                  +--ro description?             string
                  +--ro alias?                   string
                  +--ro location                 string
                  ...................................
]]></artwork></figure>

</section>
<section anchor="reference-from-rfc8348"><name>Reference from RFC8348</name>

<t>The YANG data model for network hardware inventory mainly follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro children* [child-ref]
        |  +--ro child-ref    leafref
        +--ro hardware-rev?     string
        +--ro firmware-rev?     string
        +--ro software-rev?     string
        +--ro serial-num?       string
        +--ro mfg-name?         string
        +--ro asset-id?         string
        +--ro is-fru?           boolean
        +--ro mfg-date?         yang:date-and-time
        +--ro uri*              inet:uri
]]></artwork></figure>

<t>But we re-defined some attributes listed in <xref target="RFC8348"/>, based on some integration experience for network wide inventory data.</t>

</section>
<section anchor="changes-with-respect-to-rfc8348"><name>Changes with respect to RFC8348</name>

<section anchor="new-parent-identifiers-reference"><name>New Parent Identifiers' Reference</name>

<t><xref target="RFC8348"/> provided a "parent-ref" attribute, which was an identifier reference to its parent component. When the MDSC or OSS systems want to find this component's grandparent or higher level component in the hierarchy, they need to retrieve this parent-ref step by step. To reduce this iterative work, we decided to provide a list of hierarchical parent components' identifier references.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro parent-references
        |  +--ro equipment-room-uuid?    leafref
        |  +--ro ne-uuid?                leafref
        |  +--ro rack-uuid?              leafref
        |  +--ro component-references
        |     +--ro component-reference* [index]
        |        +--ro index    uint8
        |        +--ro class?   leafref
        |        +--ro uuid?    leafref
        ...................................
]]></artwork></figure>

<t>The hierarchical components' identifier could be found by the "component-reference" list. The "index" attribute is used to order the list by the hierarchical relationship from topmost component (with the "index" set to 0) to bottom component.</t>

</section>
<section anchor="component-specific-info-design"><name>Component-Specific Info Design</name>

<t>According to the management requirements from operators, some important attributes are not defined in <xref target="RFC8348"/>. These attributes could be component-specific and are not suitable to define under the component list node. So, we defined a choice-case structure for this component-specific extension, as follows:</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro (component-class)?
           +--:(chassis)
           |  +--ro chassis-specific-info
           +--:(container)
           |  +--ro slot-specific-info
           +--:(module)
           |  +--ro board-specific-info
           +--:(port)
              +--ro port-specific-info
        ...................................
]]></artwork></figure>

<t>Note: The detail of each *-specific-info YANG container is still under discussion, and the leaf attributes will be defined in future.</t>

</section>
<section anchor="part-number"><name>Part Number</name>

<t>According to the description in <xref target="RFC8348"/>, the attribute named "model-name" under the component, is preferred to have a customer-visible part number value. "Model-name" is not straightforward to understand and we suggest to rename it as "part-number" directly.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        ...................................
        +--ro part-number?           string
        ...................................
]]></artwork></figure>

</section>
</section>
<section anchor="equipment-room"><name>Equipment Room</name>

<t>Note: add some more attributes about equipment room in the future.</t>

</section>
<section anchor="rack"><name>Rack</name>

<t>Besides the common attributes mentioned in above section, rack could have some specific attributes, such as appearance-related attributes and electricity-related attributes.
The height, depth and width are described by the figure below (please consider that the door of the rack is facing the user):</t>

<figure title="height, width and depth of rack" anchor="fig-rack-appearance"><artwork type="ascii-art"><![CDATA[
                 ----------------      ---
                /|              /|      |
               / |             / |      | 
              /  |            /  |      |
             ----|-----------|   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |    height
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   | Door    Q |   |      |
             |   |         Q |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   |           |   |      |
             |   /-----------|----     ---
             |  /            |   /      /
             | /             |  /      depth
             |/              | /      /
             -----------------      ---
             |______width____|
             |               |

]]></artwork></figure>

<t>The rack attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
   +--ro racks
      +--ro rack* [uuid]
         ...................................
         +--ro height?              uint16
         +--ro width?               uint16
         +--ro depth?               uint16
         +--ro max-voltage?         uint16
         ...................................
]]></artwork></figure>

<t>Max-voltage: the maximum voltage supported by the rack.</t>

</section>
<section anchor="network-element"><name>Network Element</name>

<t>We consider that some of the attributes defined in <xref target="RFC8348"/> for components are also applicable for network element. These attributes include:</t>

<figure><artwork type="ascii-art"><![CDATA[
      +--ro network-elements
         +--ro network-element* [uuid]
            ...................................
            +--ro hardware-rev?    string
            +--ro firmware-rev?    string
            +--ro software-rev?    string
            +--ro mfg-name?        string
            +--ro mfg-date?        yang:date-and-time
            +--ro part-number?     string
            +--ro serial-number?   string
            +--ro product-name?    string
            ...................................
]]></artwork></figure>

<t>Note: Not all the attributes defined in <xref target="RFC8348"/> are applicable for network element. And there could also be some missing attributes which are not recognized by <xref target="RFC8348"/>. We will do some more extensions after the missing attributes are fully discussed.</t>

</section>
</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During  the integration with OSS in some operators, some efficiency/scalability concerns have been discovered when synchronizing network inventory data for big networks.  More discussions are needed to address these concerns.</t>

<t>Considering that relational databases are widely used by traditional OSS systems and also by some network controllers, the inventory objects are most likely to be saved in different tables. With the model defined in current draft, when doing a full synchronization, network controller needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the network controller &amp; OSS/MDSC processing, which may result in efficiency/scalability limitations in large scale networks.</t>

<t>An alternative YANG model structure, which defines the inventory objects directly, instead of defining generic components, has also been analyzed. However, also with this model, there still could be some scalability limitations when synchronizing full inventory resources in large scale of networks. This scalability limitation is caused by the limited transmission capabilities of HTTP protocol. We think that this scalability limitation should be solved at protocol level rather than data model level.</t>

<t>In case there are some other special types of inventory objects that could be used in other technologies and have not been considered by us, we would like to provide a generic model. If we define the inventory objects directly and give them fix hierarchical relationships in YANG model, once there is a new type of inventory object that needs to be introduced into the model, we need to break down our YANG model and insert the new one, this is not a backward compatible change and therefore is not an acceptable approach for implementation. With a generic model, we only need to augment a new component class and extend some specific attributes for this new inventory component class, which is more flexible. We consider that this generic data model, enabling a flexible and backward compatible approach for other technologies, represents the main scope of this draft. Solution description to efficiency/scalability limitations mentioned above is considered as out-of-scope.</t>

</section>
<section anchor="some-other-considerations"><name>Some Other Considerations</name>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of the network-element container.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and having a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analysed so far to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical.</t>

</section>
</section>
<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-inventory.tree"><![CDATA[
module: ietf-network-inventory
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid           yang:uuid
     |     +--ro name?          string
     |     +--ro description?   string
     |     +--ro alias?         string
     |     +--ro location?      string
     |     +--ro racks
     |        +--ro rack* [uuid]
     |           +--ro uuid                 yang:uuid
     |           +--ro name?                string
     |           +--ro description?         string
     |           +--ro alias?               string
     |           +--ro rack-location
     |           |  +--ro equipment-room-name?   leafref
     |           |  +--ro row-number?            uint32
     |           |  +--ro column-number?         uint32
     |           +--ro rack-number?         uint32
     |           +--ro height?              uint16
     |           +--ro width?               uint16
     |           +--ro depth?               uint16
     |           +--ro max-voltage?         uint16
     |           +--ro contained-chassis* [ne-ref component-ref]
     |              +--ro ne-ref           leafref
     |              +--ro component-ref    leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid             yang:uuid
           +--ro name?            string
           +--ro description?     string
           +--ro alias?           string
           +--ro ne-location
           |  +--ro equipment-room-name*   leafref
           +--ro hardware-rev?    string
           +--ro firmware-rev?    string
           +--ro software-rev?    string
           +--ro mfg-name?        string
           +--ro mfg-date?        yang:date-and-time
           +--ro part-number?     string
           +--ro serial-number?   string
           +--ro product-name?    string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid                           yang:uuid
                 +--ro name?                          string
                 +--ro description?                   string
                 +--ro alias?                         string
                 +--ro location?                      string
                 +--ro class?                         identityref
                 +--ro contained-child*               -> ../uuid
                 +--ro parent-rel-pos?                int32
                 +--ro parent-references
                 |  +--ro equipment-room-uuid?    leafref
                 |  +--ro ne-uuid?                leafref
                 |  +--ro rack-uuid?              leafref
                 |  +--ro component-references
                 |     +--ro component-reference* [index]
                 |        +--ro index    uint8
                 |        +--ro class?   -> ../../../../class
                 |        +--ro uuid?    -> ../../../../uuid
                 +--ro hardware-rev?                  string
                 +--ro firmware-rev?                  string
                 +--ro software-rev?                  string
                 +--ro serial-num?                    string
                 +--ro mfg-name?                      string
                 +--ro part-number?                   string
                 +--ro asset-id?                      string
                 +--ro is-fru?                        boolean
                 +--ro mfg-date?
                 |       yang:date-and-time
                 +--ro uri*                           inet:uri
                 +--ro (component-class)?
                    +--:(chassis)
                    |  +--ro chassis-specific-info
                    +--:(container)
                    |  +--ro slot-specific-info
                    +--:(module)
                    |  +--ro board-specific-info
                    +--:(port)
                       +--ro port-specific-info
]]></artwork></figure>

</section>
<section anchor="ni-yang"><name>YANG Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-inventory@2022-07-11.yang"><![CDATA[
module ietf-network-inventory {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-network-inventory";
  prefix ni;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "RFC 8348: A YANG Data Model for Hardware Management.";
  }
  
  import ietf-inet-types {
    prefix inet;
  } 
  
  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2022 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Revised BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2022-07-11 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-01: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2022-03-04 {
    description
      "version 3.0.0";
    reference
      "draft-yg3bp-ccamp-inventory-yang-00: A YANG Data
      Model for Network Inventory.";
  }
  
  revision 2021-11-09 {
    description
      "version 2.0.0";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }

  revision 2021-10-25 {
    description
      "Initial revision.";
    reference
      "draft-yg3bp-ccamp-optical-inventory-yang-00: A YANG Data
      Model for Optical Network Inventory.";
  }
  
  container network-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
    leaf description {
      type string;
      description "a textual description of inventory object";
    }
    leaf alias {
      type string;
      description 
      "a alias name of inventory objects. This alias name can be 
      specified by network manager.";
    }
  }
 
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        container ne-location {
          description
            "To be added.";
          leaf-list equipment-room-name {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:name";
            }
            description
              "Names of equipment rooms where the NE is located. 
              Please note that a NE could be located in several 
              equipment rooms.";
          }
        }
        uses ne-specific-info-grouping;
        uses components-grouping;
      }
    }
  }
  
  grouping ne-specific-info-grouping {
    description
      "To be added.";
    leaf hardware-rev {
      type string;
      description
        "The vendor-specific hardware revision string for the NE.";
    }
    leaf firmware-rev {
      type string;
      description
        "The vendor-specific firmware revision string for the NE.";
    }
    leaf software-rev {
      type string;
      description
        "The vendor-specific software revision string for the NE.";
    }
    leaf mfg-name {
      type string;
      description "The name of the manufacturer of this NE";
    }
    leaf mfg-date {
      type yang:date-and-time;
      description "The date of manufacturing of the NE.";
    }
    leaf part-number {
      type string;
      description
        "The vendor-specific model name identifier string associated
         with this NE.  The preferred value is the customer-visible 
         part number, which may be printed on the NE itself.";
    }
    leaf serial-number {
      type string;
      description
        "The vendor-specific serial number string for the NE";
    }
    leaf product-name {
      type string;
      description
        "indicates the vendor-spefic device type infomation.";
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        container racks {
          description
            "To be added.";
          list rack {
            key uuid;
            description
              "The list of racks within an equipment room.";
            uses common-entity-attributes;
            uses rack-specific-info-grouping;
            list contained-chassis {
              key "ne-ref component-ref";
              description
                "The list of chassis within a rack.";
              leaf ne-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element/ni:uuid";
                }
                description
                  "The reference to the network element containing
                  the chassis component.";
              }
              leaf component-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                  + "/ni:network-element[ni:uuid"
                  + "=current()/../ne-ref]/ni:components"
                  + "/ni:component/ni:uuid";
                }
                description
                  "The reference to the chassis component within 
                  the network element and contained by the rack.";
              }
            }
          }
        }
      }
    }
  }
  
  grouping rack-specific-info-grouping {
    description
      "To be added.";
    container rack-location {
      description
        "To be added.";
      leaf equipment-room-name {
        type leafref {
          path "/ni:network-inventory/ni:equipment-rooms"
          + "/ni:equipment-room/ni:name";
        }
        description 
        "Name of equipment room where this rack is located.";
      }
      leaf row-number {
        type uint32;
        description
          "Identifies the row within the equipment room where
          the rack is located.";
      }
      leaf column-number {
        type uint32;
        description
          "Identifies the physical location of the rack within
          the column.";
      }
    }
    leaf rack-number {
      type uint32;
      description
        "An integer identifier of rack.";
    }
    leaf height {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf width {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf depth {
      type uint16;
      units millimeter;
      description
        "To be added.";
    }
    leaf max-voltage {
      type uint16;
      units volt;
      description
        "The maximum voltage could be supported by the rack.";
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "To be added.
            
            In optical transport network, the location string is 
            using the following pattern: 
              '/ne=<nw-ne-name>[/r=<r_index>][/sh=<sh_index>
              [/s_sh=<s_sh_index> ...]][[/sl=<sl_index>
              [/s_sl=<s_sl_index> ...]][/p=<p_index> â¦]]'
            ";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf-list contained-child {
          type leafref {
            path "../ni:uuid";
          }
          description
            "The child components' identifier that are physically 
            contained by this component.";          
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "To be added.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalParentRelPos";
        }
        container parent-references {
          description
            "To be added.";
          leaf equipment-room-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf ne-uuid {
            type leafref {
              path "/ni:network-inventory/ni:network-elements/" +
                   "ni:network-element/ni:uuid";
            }
            description
              "To be added.";
          }
          leaf rack-uuid {
            type leafref {
              path "/ni:network-inventory/ni:equipment-rooms/" +
                   "ni:equipment-room/ni:racks/ni:rack/ni:uuid";
            }
            description
              "To be added.";
          }
          container component-references {
            description
              "To be added.";
            list component-reference {
              key index;
              description
                "this list object is used to indicate its
                hierarchial parent components' identifier.
                This hierarchial relation can be found by index 
                parameter. The topest parent component should be 
                0-index.";
              leaf index {
                type uint8;
                description
                  "To be added.";
              }
              leaf class {
                type leafref {
                  path "../../../../ni:class";
                }
                description
                  "To be added.";
              }
              leaf uuid {
                type leafref {
                  path "../../../../ni:uuid";
                }
                description
                  "To be added.";
              }
            }
          }
        }
        leaf hardware-rev {
          type string;
          description
            "The vendor-specific hardware revision string for the
             component.  The preferred value is the hardware revision
             identifier actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalHardwareRev";
        }
        leaf firmware-rev {
          type string;
          description
            "The vendor-specific firmware revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalFirmwareRev";
        }
        leaf software-rev {
          type string;
          description
            "The vendor-specific software revision string for the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) -
                       entPhysicalSoftwareRev";
        }
        leaf serial-num {
          type string;
          description
            "The vendor-specific serial number string for the
             component.  The preferred value is the serial number
             string actually printed on the component itself (if
             present).";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalSerialNum";
        }
        leaf mfg-name {
          type string;
          description
            "The name of the manufacturer of this physical component.
             The preferred value is the manufacturer name string
             actually printed on the component itself (if present).

             Note that comparisons between instances of the
             'model-name', 'firmware-rev', 'software-rev', and
             'serial-num' nodes are only meaningful amongst 
             components with the same value of 'mfg-name'.

             If the manufacturer name string associated with the
             physical component is unknown to the server, then this
             node is not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgName";
        }
        leaf part-number {
          type string;
          description
            "The vendor-specific model name identifier string
             associated with this physical component.  The preferred
             value is the customer-visible part number, which may be
             printed on the component itself.

             If the model name string associated with the physical
             component is unknown to the server, then this node is 
             not instantiated.";
          reference
            "RFC 6933: Entity MIB (Version 4) - 
            entPhysicalModelName";
        }
        leaf asset-id {
          type string;
          description
            "This node is a user-assigned asset tracking identifier 
             for the component.

             A server implementation MAY map this leaf to the
             entPhysicalAssetID MIB object.  Such an implementation
             needs to use some mechanism to handle the differences in
             size and characters allowed between this leaf and
             entPhysicalAssetID.  The definition of such a mechanism 
             is outside the scope of this document.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalAssetID";
        }
        leaf is-fru {
          type boolean;
          description
            "This node indicates whether or not this component is
             considered a 'field-replaceable unit' by the vendor.  If
             this node contains the value 'true', then this component
             identifies a field-replaceable unit.  For all components
             that are permanently contained within a 
             field-replaceable unit, the value 'false' should be 
             returned for this node.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalIsFRU";
        }
        leaf mfg-date {
          type yang:date-and-time;
          description
            "The date of manufacturing of the managed component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalMfgDate";
        }
        leaf-list uri {
          type inet:uri;
          description
            "This node contains identification information about the
             component.";
          reference
            "RFC 6933: Entity MIB (Version 4) - entPhysicalUris";
        }
        uses component-specific-info-grouping;
      }
    }
  }
  
  grouping component-specific-info-grouping {
    description 
      "In case if there are some missing attributes of component not 
      defined by RFC8348. These attributes could be 
      component-specific.
      Here we provide a extension structure for all the components 
      we recognized. We will enrich these component specifc 
      containers in the future.";
    choice component-class {
      description
        "To be added.";
      case chassis {
        when "./class = 'ianahw:chassis'";
        container chassis-specific-info {
          description 
            "This container contains some attributes belong to
            chassis only.";
          uses chassis-specific-info-grouping;
        }
      }
      case container {
        when "./class = 'ianahw:container'";
        container slot-specific-info {
          description 
            "This container contains some attributes belong to
            slot or sub-slot only.";
          uses slot-specific-info-grouping;
        }
      }
      case module {
        when "./ni:class = 'ianahw:module'";
        container board-specific-info {
          description 
            "This container contains some attributes belong to
            board only.";
          uses board-specific-info-grouping;
        }
      }
      case port {
        when "./ni:class = 'ianahw:port'";
        container port-specific-info {
          description 
            "This container contains some attributes belong to
            port only.";
          uses port-specific-info-grouping;
        }
      }
    //TO BE ADDED: transceiver
    }
  }
  
  grouping chassis-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping slot-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping board-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
  
  grouping port-specific-info-grouping {
  //To be enriched in the future.
    description
      "To be added.";
  }
}
]]></sourcecode></figure>

</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF-MTOSI" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>TMF MTOSI 4.0 Equipment Model</title>
    <author >
      <organization>TM Forum (TMF)</organization>
    </author>
    <date year="2008"/>
  </front>
  <seriesInfo name="TMF SD2-20_EquipmentModel" value=""/>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini'>
	 <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier'>
	 <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli'>
	 <organization>Ericsson</organization>
      </author>
      <date day='10' month='July' year='2022'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models being defined by the IETF to support
   this deployment architecture and specific scenarios relevant for
   Service Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-07'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-actn-poi-applicability-07.txt' type='TXT'/>
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>


  </back>

<!-- ##markdown-source:
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
bq/T5MsWTKrFtFih/UWMzQ3OFoaqm2cTiWWM+oCfswnmp9Z3hAEgCt9lXxvl
BK3SNMMaz7kE4BEVskBM/mDcNJGzMNrCbZJLBbR1NTS5ZVsQdBlZdPBcx6xt
x1DspaBNvqK1230c8Q2MNckJMLduzEy2VNUkrok5ZerEzLaUGkcNwmUjn3fa
1ME/LenQKU3WiYerdixF/Hau2rQcSlyTofn1+ql0pZJGt+WqTubS2aBQWRo8
37TXFjLqvy0x0oGBwqGrRVLL2jfEOUgogd0lgJ1yLoXMiaeLbyd6iCApx+l4
DJs0t3Fmy4RwjxyUtsErflUnG/47AbsP0D/3BkV2HKya+NBbuAZ74pNgP07I
BmUJJIb7f92u8Lb9s7P7APNCX23VXmTIQ7xiTRojGFRGVPRF90Go+4wK47CY
Yg3jBq3q0R5X5b33IXhNewPhdOatxx0w4C3Dqr/mm4L2nDUs8tab4v4c72hi
7RyPcBWJOfco5zbLI84nvqnb+pwZs6TRNBmUmfIXT6JS3j0Zel+4aJi74uIe
NL0vXDTMXXHRR087LH3YvF6BVKqe5SQlw1NlluqLJ12t0bY0oqu1znm6W9a7
Wtuqc0NeRyedI7L3RW+21nH6EJu3SdHc3nPnTG0bxwJYsm3F5j5RCozKnOGn
P3GgOJlQ3GAgSnmdUZZwdW8uyjEy8sRZ0HXueG88SEC1ISPgv+jIOL4jt0Ej
K8Zo1lBBSRYhREfdNkrAUJh526gOEdi1sdpdy+kS9HYJ99p6Nx2ne12JrOvv
QcMJltD3o+AQW8QVmxhbrMFWcMK0tHKum3QypTsZ2NWAkTt1G0LkFoCUL9ZT
0aStDEaT0qveppFLDmdxt0PK9+q8uzKHI0RpEjzlLDLSa9vwRlxd+8PjjBvW
Vu/6vl627YibsuREs1HFMT0MnC9DXRQ7vBdzyPRxXUsEjwy6NU0IToEQQmTT
ADceYLZJi8bPBk3a3yLtxWB80gagyuIjZIQQ6UCd3kgbRZ1W4tDIJk8PFwxm
DAate4qwNntgiF+AHVG57RD7FyP2L5rYHVUeqEDtOwfoG8UM8xvCsXr8utbs
FecfYFCDIdKzoGtMfS7gMHB9AufmENk41q2fsX3S+r3NGumy6+6mLbEj2/CO
9TsqsYmBN+y6u9l3t912i48U/2zeZDu0jpml1L461AnMrjqrTR40vbG28N+2
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
sv8XRGnxaRPIAAA=

-->

</rfc>

