<?xml version="1.0" encoding="utf-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.6.5 (Ruby 2.7.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc comments="yes"?>

<rfc ipr="trust200902" docName="draft-yg3bp-ccamp-network-inventory-yang-01" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="Network Inventory YANG">A YANG Data Model for Network Hardware Inventory</title>

    <author initials="C." surname="Yu" fullname="Chaode Yu">
      <organization>Huawei Technologies</organization>
      <address>
        <email>yuchaode@huawei.com</email>
      </address>
    </author>
    <author initials="I." surname="Busi" fullname="Italo Busi">
      <organization>Huawei Technologies</organization>
      <address>
        <email>italo.busi@huawei.com</email>
      </address>
    </author>
    <author initials="A." surname="Guo" fullname="Aihua Guo">
      <organization>Futurewei Technologies</organization>
      <address>
        <email>aihuaguo.ietf@gmail.com</email>
      </address>
    </author>
    <author initials="S." surname="Belotti" fullname="Sergio Belotti">
      <organization>Nokia</organization>
      <address>
        <email>sergio.belotti@nokia.com</email>
      </address>
    </author>
    <author initials="J.-F." surname="Bouquier" fullname="Jean-Francois Bouquier">
      <organization>Vodafone</organization>
      <address>
        <email>jeff.bouquier@vodafone.com</email>
      </address>
    </author>
    <author initials="F." surname="Peruzzini" fullname="Fabio Peruzzini">
      <organization>TIM</organization>
      <address>
        <email>fabio.peruzzini@telecomitalia.it</email>
      </address>
    </author>
    <author initials="O." surname="Gonzalez de Dios" fullname="Oscar Gonzalez de Dios">
      <organization>Telefonica</organization>
      <address>
        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>
    <author initials="V." surname="Lopez" fullname="Victor Lopez">
      <organization>Nokia</organization>
      <address>
        <email>victor.lopez@nokia.com</email>
      </address>
    </author>

    <date year="2022" month="March" day="14"/>

    
    <workgroup>CCAMP Working Group</workgroup>
    

    <abstract>


<t>This document defines a YANG data model for network hardware inventory data information.</t>

<t>The YANG data model presented in this document is intended to be used as the basis toward a generic YANG data model for network hardware inventory data information which can be augmented, when required, with technology-specific (e.g., optical) inventory data, to be defined either in a future version of this document or in another document.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture (NMDA).</t>



    </abstract>



  </front>

  <middle>


<section anchor="introduction"><name>Introduction</name>

<t>Network hardware inventory management is a key component in operators' OSS architectures.</t>

<t>Network inventory is a fundamental functionality in network management
  and was specified many years ago. Given the emerging of data models and 
  their deployment in operator's management and control systems, the traditional function of inventory management
  is also requested to be defined as a data model.</t>

<t>Network inventory management and monitoring is a critical part of 
  ensuring the network stays healthy, well-planned, and functioning 
  in the operator's network. Network inventory management allows the
  operator to keep track of what physical network devices are staying
  in the network including relevant software and hardware.</t>

<t>The network inventory management also helps the operator to know when 
  to acquire new assets and what is needed, or to decommission old or faulty ones, 
  which can help to improve network performance and capacity planning.</t>

<t>In <xref target="I-D.ietf-teas-actn-poi-applicability"/> a gap was identified regarding the lack of a YANG data model that could be used at ACTN MPI interface level to report whole/partial hardware inventory information available at PNC level towards north-bound systems (e.g., MDSC or OSS layer).</t>

<t><xref target="RFC8345"/> initial goal was to make possible the augmentation of the YANG data model with network inventory data model but this was never developed and the scope was kept limited to network topology data only.</t>

<t>It is key for operators to drive the industry towards the use of a standard YANG data model for network inventory data instead of using vendors proprietary APIs (e.g., REST API).</t>

<t>In the ACTN architecture, this would bring also clear benefits at MDSC level for packet over optical integration scenarios since this would enable the correlation of the inventory information with the links information reported in the network topology model.</t>

<t>The intention is to define a generic YANG data model that would be as much as possible technology agnostic (valid for IP, optical and microwave networks) and that could be augmented, when required, to include some technology-specific inventory details.</t>

<t><xref target="RFC8348"/> defines a YANG data model for the management of the hardware on a single server and therefore it is more applicable to the PNC South Bound Interface (SBI) towards the network elements rather than at the PNC MPI. However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network hardware inventory data model.</t>

<t>For optical network hardware inventory, the network inventory YANG data model should support the use cases (4a and 4b) and requirements defined in <xref target="ONF_TR-547"/>, in order to guarantee a seamless integration at MDSC/OSS/orchestration layers.</t>

<t>The proposed YANG data model has been analyzed to cover the requirements and use cases for Optical Network Hardware Inventory.</t>

<t>Being based on <xref target="RFC8348"/>, this data model should be a good starting point toward a generic data model and applicable to any technology. However, further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

<t>This document defines one YANG module: ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<t>Note: review in future versions of this document the related modules, depending on the augmentation relationship.</t>

<t>The YANG data model defined in this document conforms to the Network Management Datastore Architecture <xref target="RFC8342"/>.</t>

<section anchor="terminology-and-notations"><name>Terminology and Notations</name>

<t>The following terms are defined in <xref target="RFC7950"/> and are not
  redefined here:</t>

<t><list style="symbols">
  <t>client</t>
  <t>server</t>
  <t>augment</t>
  <t>data model</t>
  <t>data node</t>
</list></t>

<t>The following terms are defined in <xref target="RFC6241"/> and are not redefined
  here:</t>

<t><list style="symbols">
  <t>configuration data</t>
  <t>state data</t>
</list></t>

<t>The terminology for describing YANG data models is found in
  <xref target="RFC7950"/>.</t>

<t>TBD: Recap the concept of chassis/slot/component/board/... in <xref target="TMF-MTOSI"/>.</t>

<t>Following terms are used for the representation of the hierarchies in the network hardware inventory.</t>

<t>Network Element:</t>

<ul empty="true"><li>
  <t>a device installed on one or several chassis and can afford some specific transmission function independently.</t>
</li></ul>

<t>Rack:</t>

<ul empty="true"><li>
  <t>a holder of the device and provides power supply for the device in it.</t>
</li></ul>

<t>Chassis:</t>

<ul empty="true"><li>
  <t>a holder of the device installation.</t>
</li></ul>

<t>Slot:</t>

<ul empty="true"><li>
  <t>a holder of the board.</t>
</li></ul>

<t>Component:</t>

<ul empty="true"><li>
  <t>holders and equipments of the network element, including chassis, slot, sub-slot, board and port.</t>
</li></ul>

<t>Board/Card:</t>

<ul empty="true"><li>
  <t>a pluggable equipment can be inserted into one or several slots/sub-slots and can afford a specific transmission function independently.</t>
</li></ul>

<t>Port:</t>

<ul empty="true"><li>
  <t>an interface on board</t>
</li></ul>

</section>
<section anchor="requirements-notation"><name>Requirements Notation</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
"MAY", and "OPTIONAL" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>

</section>
<section anchor="tree-diagram"><name>Tree Diagram</name>

<t>A simplified graphical representation of the data model is used in <xref target="ni-tree"/> of this document.
The meaning of the symbols in these diagrams is defined in <xref target="RFC8340"/>.</t>

</section>
<section anchor="prefix-in-data-node-names"><name>Prefix in Data Node Names</name>

<t>In this document, names of data nodes and other data model objects
  are prefixed using the standard prefix associated with the
  corresponding YANG imported modules, as shown in the following table.</t>

<texttable title="Prefixes and corresponding YANG modules" anchor="tab-prefixes">
      <ttcol align='left'>Prefix</ttcol>
      <ttcol align='left'>Yang Module</ttcol>
      <ttcol align='left'>Reference</ttcol>
      <c>ianahw</c>
      <c>iana-hardware</c>
      <c><xref target="RFC8348"/></c>
      <c>ni</c>
      <c>ietf-network-inventory</c>
      <c>RFCXXX</c>
      <c>yang</c>
      <c>ietf-yang-types</c>
      <c><xref target="RFC6991"/></c>
</texttable>

<t>RFC Editor Note:
Please replace XXXX with the RFC number assigned to this document.
Please remove this note.</t>

</section>
</section>
<section anchor="yang-data-model-for-network-hardware-inventory"><name>YANG Data Model for Network Hardware Inventory</name>

<section anchor="yang-model-overview"><name>YANG Model Overview</name>

<t>Based on TMF classification in <xref target="TMF-MTOSI"/>, inventory objects can be divided into two groups, holder group and equipment group. The holder group contains rack, chassis, slot, sub-slot while the equipment group contains network-element, board and port. With the requirement of GIS and on-demand domain controller selection raised, the equipment room becomes a new inventory object to be managed besides TMF classification.</t>

<t>Logically,  the relationship between these inventory objects can be described by <xref target="fig-inventory-object-relationship"/> below:</t>

<figure title="Relationship between inventory objects" anchor="fig-inventory-object-relationship"><artwork type="ascii-art"><![CDATA[
                +-------------+
                |  inventory  |
                +-------------+
                    // \\
              1:N  //   \\ 1:M
                  //     \\                             
  +----------------+     +-----------------+ 
  | equipment room |     | network element |
  +----------------+     +-----------------+
          ||                     ||
          || 1:N                 ||
          \/                     || 
    +------------+               ||1:M
    |    rack    |               ||
    +------------+               ||
          ||                     ||
          || 1:N                 \/
          ||______________\+------------+
          |---------------/|   chassis  |
                           +------------+
                                 ||
                  ______1:N______||_____1:M_______
                  ||------------------ ---------||
                  \/                            \/      
           +--------------+               +-----------+
           | slot/subslot |               |   board   |
           +--------------+               +-----------+
                                                ||
                                                ||1:N
                                                \/
                                          +-----------+ 
                                          |    port   |
                                          +-----------+

]]></artwork></figure>

<t>In <xref target="RFC8348"/>, rack, chassis, slot, sub-slot, board and port are defined as components of network elements with generic attributes.</t>

<t>While <xref target="RFC8348"/> is used to manage the hardware of a single server (e.g., a Network Element), the Network Inventory YANG data model is used to retrieve the network hardware inventory information that a controller discovers from multiple Network Elements under its control.</t>

<t>However, the YANG data model defined in <xref target="RFC8348"/> has been used as a reference for defining the YANG network inventory data model. This approach can simplify the implementation of this network hardware inventory model when the controller uses the YANG data model defined in <xref target="RFC8348"/> to retrieve the hardware  from the network elements under its control.</t>

<t>Note: review in future versions of this document which attributes from <xref target="RFC8348"/> are required also for network hardware inventory and whether there are attributes not defined in <xref target="RFC8348"/> which are required for network hardware inventory</t>

<t>Note: review in future versions of this document whether to re-use definitions from <xref target="RFC8348"/> or use schema-mount.</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     ...................................
     |     +--ro rack* [uuid]
     |        +--ro uuid           yang:uuid
     |        ...................................
     |        +--ro chassis* [uuid]
     |           +--ro uuid            yang:uuid
     |           ...................................
     |           +--ro chassis-ref
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           ...................................
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 ...................................
]]></artwork></figure>

<t>The YANG data model for network hardware inventory follows the same approach of <xref target="RFC8348"/> and reports the network hardware inventory as a list of components with different types (e.g., chassis, module, port).</t>

<figure><artwork type="ascii-art"><![CDATA[
  +--ro components
     +--ro component* [uuid]
        +--ro uuid              yang:uuid
        +--ro name?             string
        +--ro description?      string
        +--ro class?            identityref
        +--ro parent-rel-pos?   int32
        +--ro children* [child-ref]
        |  +--ro child-ref    -> ../../uuid
        +--ro parent
           +--ro parent-ref?   -> ../../uuid
]]></artwork></figure>

<t>Note: review in future versions of this document whether the component list should be under the network-inventory instead of under the network-element container</t>

<t>However, considering there are some special scenarios, the relationship between the rack and network elements is not 1 to 1 nor 1 to n. The network element cannot be the direct parent node of the rack. So there should be n to m relationship between racks and network elements.
And the chassis in the rack should have some reference information to the component.</t>

<t>Note that in <xref target="RFC8345"/>, topology and inventory are two subsets of network information. However, considering the complexity of the existing topology models and to have a better extension capability, we define a separate root for the inventory model. We will consider some other ways to do some associations between the topology model and inventory model in the future.</t>

<t>Note: review in future versions of this document whether network hardware inventory should be defined as an augmentation of the network model defined in <xref target="RFC8345"/> instead of under a new network-inventory root.</t>

<t>The proposed YANG data model has been analysed to cover the requirements and use cases for Optical Network Inventory.</t>

<t>Further analysis of requirements and use cases is needed to extend the applicability of this YANG data model to other types of networks (IP and microwave) and to identify which aspects are generic and which aspects are technology-specific for optical networks.</t>

</section>
<section anchor="efficiency-issue"><name>Efficiency Issue</name>

<t>During doing the design of integration with OSS, some efficiency issues have been discovered.  More discussion is needed to be done in the future to address this issue.</t>

<t>Considering relational database is widely used by traditional OSS systems and part of PNCs, the inventory objects are probably saved in different tables. If the generic model is adopted, when doing a  full synchronization, PNC needs to convert all inventory objects of each NE into component objects and combine them together into a single list, and then construct a response and send to OSS or MDSC. The OSS or MDSC needs to classify the component list and divide them into different groups, in order to save them in different tables. The combining-regrouping steps are impacting the PNC &amp; OSS/MDSC processing, which may result in efficiency issue in large scale networks.</t>

</section>
</section>
<section anchor="ni-tree"><name>Network Hardware Inventory Tree Diagram</name>

<t><xref target="fig-ni-tree"/> below shows the tree diagram of the YANG data model defined in module ietf-network-inventory.yang (<xref target="ni-yang"/>).</t>

<figure title="Network inventory tree diagram" anchor="fig-ni-tree"><artwork type="ascii-art" name="ietf-network-inventory.tree"><![CDATA[
module: ietf-network-inventory
  +--ro network-inventory
     +--ro equipment-rooms
     |  +--ro equipment-room* [uuid]
     |     +--ro uuid        yang:uuid
     |     +--ro name?       string
     |     +--ro location?   string
     |     +--ro rack* [uuid]
     |        +--ro uuid           yang:uuid
     |        +--ro name?          string
     |        +--ro row-number?    uint32
     |        +--ro rack-number?   uint32
     |        +--ro chassis* [uuid]
     |           +--ro uuid              yang:uuid
     |           +--ro name?             string
     |           +--ro chassis-number?   uint8
     |           +--ro chassis-ref
     |              +--ro ne-ref?          leafref
     |              +--ro component-ref?   leafref
     +--ro network-elements
        +--ro network-element* [uuid]
           +--ro uuid          yang:uuid
           +--ro name?         string
           +--ro components
              +--ro component* [uuid]
                 +--ro uuid              yang:uuid
                 +--ro name?             string
                 +--ro description?      string
                 +--ro class?            identityref
                 +--ro parent-rel-pos?   int32
                 +--ro children* [child-ref]
                 |  +--ro child-ref    -> ../../uuid
                 +--ro parent
                    +--ro parent-ref?   -> ../../uuid
]]></artwork></figure>

</section>
<section anchor="ni-yang"><name>YANG Model for Network Hardware Inventory</name>

<figure title="Network inventory YANG module" anchor="fig-ni-yang"><sourcecode type="yang" markers="true" name="ietf-network-inventory@2022-03-04.yang"><![CDATA[
module ietf-network-inventory {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-network-inventory";
  prefix ni;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC6991: Common YANG Data Types.";
  }
  
  import iana-hardware {
    prefix ianahw;
    reference
      "RFC 8348: A YANG Data Model for Hardware Management.";
  }
  
  organization
    "IETF CCAMP Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/ccamp/>
     WG List:  <mailto:ccamp@ietf.org>

     Editor:   Chaode Yu
               <yuchaode@huawei.com>

     Editor:   Italo Busi
               <italo.busi@huawei.com>

     Editor:   Aihua Guo
               <aihuaguo.ietf@gmail.com>

     Editor:   Sergio Belotti
               <sergio.belotti@nokia.com>

     Editor:   Jean-Francois Bouquier
               <jeff.bouquier@vodafone.com>

     Editor:   Fabio Peruzzini
               <fabio.peruzzini@telecomitalia.it>";

  description
    "This module defines a model for retrieving network inventory.

    The model fully conforms to the Network Management 
    Datastore Architecture (NMDA).
    
    Copyright (c) 2021 IETF Trust and the persons
    identified as authors of the code.  All rights reserved.

    Redistribution and use in source and binary forms, with or
    without modification, is permitted pursuant to, and subject
    to the license terms contained in, the Simplified BSD License
    set forth in Section 4.c of the IETF Trust's Legal Provisions
    Relating to IETF Documents
    (https://trustee.ietf.org/license-info).

    This version of this YANG module is part of RFC XXXX; see
    the RFC itself for full legal notices.

    The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
    NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
    'MAY', and 'OPTIONAL' in this document are to be interpreted as
    described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
    they appear in all capitals, as shown here.";

  // RFC Ed.: replace XXXX with actual RFC number and remove this
  // note.
  // RFC Ed.: update the date below with the date of RFC publication
  // and remove this note.
  
  revision 2022-03-04 {
    description
      "Initial revision.";
    reference
      "draft-yg3bp-ccamp-inventory-yang-00: A YANG Data
      Model for Network Inventory.";
  }
  
  container network-inventory {
    config false;
    description
      "The top-level container for the network inventory
      information.";
    uses equipment-rooms-grouping;
    uses network-elements-grouping;
  }
  
  grouping common-entity-attributes {
    description
      "A set of attributes which are common to all the entities
      (e.g., component, equipment room) defined in this module.";
    leaf uuid {
      type yang:uuid;
      description
        "Uniquely identifies an entity (e.g., component).";
    }
    leaf name {
      type string;
      description
        "A name for an entity (e.g., component), as specified by
        a network manager, that provides a non-volatile 'handle'
        for the entity and that can be modified anytime during the
        entity lifetime.

        If no configured value exists, the server MAY set the value
        of this node to a locally unique value in the operational
        state.";
    }
  }
  grouping network-elements-grouping {
    description
      "The attributes of the network elements.";
    container network-elements {
      description
        "The container for the list of network elements.";
      list network-element {
        key uuid;
        description
          "The list of network elements within the network.";
        uses common-entity-attributes;
        uses components-grouping;
      }
    }
  }
  
  grouping equipment-rooms-grouping {
    description
      "The attributes of the equipment rooms.";
    container equipment-rooms {
      description
        "The container for the list of equipment rooms.";
      list equipment-room {
        key uuid;
        description
          "The list of equipment rooms within the network.";
        uses common-entity-attributes;
        leaf location {
          type string;
          description
            "compared with the location information of the other
            inventory objects, a GIS address is preferred for
            equipment room";
        }
        list rack {
          key uuid;
          description
            "The list of racks within an equipment room.";
          uses common-entity-attributes;
          leaf row-number {
            type uint32;
            description
              "Identifies the row within the equipment room where
              the rack is located.";
          }
          leaf rack-number {
            type uint32;
            description
              "Identifies the physical location of the rack within
              the row.";
          }
          list chassis {
            key uuid;
            description
              "The list of chassis within a rack.";
            uses common-entity-attributes;
            leaf chassis-number {
              type uint8;
              description
                "Identifies the location of the chassis within the
                rack.";
            }
            container chassis-ref {
              description
                "The reference to the network element component
                representing this chassis.";
              leaf ne-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                    + "/ni:network-element/ni:uuid";
                }
                description
                  "The reference to the network element containing
                  the component.";
              }
              leaf component-ref {
                type leafref {
                  path "/ni:network-inventory/ni:network-elements"
                     + "/ni:network-element[ni:uuid"
                     + "=current()/../ne-ref]/ni:components"
                     + "/ni:component/ni:uuid";
                }
                description
                  "The reference to the component within the network
                  element.";
              }
            }
          }
        }
      }
    }
  }

  grouping components-grouping {
    description
      "The attributes of the hardware components.";
    container components {
      description
        "The container for the list of components.";
      list component {
        key uuid;
        description
          "The list of components within a network element.";
        uses common-entity-attributes;
        leaf description {
          type string;
          description
            "A textual description of the component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf class {
          type identityref {
            base ianahw:hardware-class;
          }
          description
            "An indication of the general hardware type of the
             component.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        leaf parent-rel-pos {
          type int32 {
            range "0 .. 2147483647";
          }
          description
            "An indication of the relative position of this child
             component among all its sibling components.  Sibling
             components are defined as components that:

               o share the same value of the 'parent' node and

               o share a common base identity for the 'class' node.";
          reference
            "RFC 8348: A YANG Data Model for Hardware Management.";
        }
        list children {
          key child-ref;
          description
            "The child components that are physically contained by
            this component.";
          
          leaf child-ref {
            type leafref {
              path "../../ni:uuid";
            }
            description
              "The reference to the child component.";
          }
        }
        container parent {
          description
            "The parent component that physically contains this
             component.

             If this container is not instantiated, it indicates
             that this component is not contained in any other
             component.

             In the event that a physical component is contained by
             more than one physical component (e.g., double-wide
             modules), this container contains the data of one of
             these components.  An implementation MUST use the same
             component every time this container is instantiated.";
          leaf parent-ref {
            type leafref {
              path "../../ni:uuid";
            }
            description
              "The reference to the parent component.";
          }
        }
      }
    }
  }
}
]]></sourcecode></figure>

</section>
<section anchor="manageability-considerations"><name>Manageability Considerations</name>

<t>&lt;Add any manageability considerations&gt;</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>&lt;Add any security considerations&gt;</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>&lt;Add any IANA considerations&gt;</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>

<reference anchor="TMF-MTOSI" target="https://www.tmforum.org/resources/suite/mtosi-4-0/">
  <front>
    <title>TMF MTOSI 4.0 Equipment Model</title>
    <author >
      <organization>TM Forum (TMF)</organization>
    </author>
    <date year="2008"/>
  </front>
  <seriesInfo name="TMF SD2-20_EquipmentModel" value=""/>
</reference>




<reference anchor='RFC8348' target='https://www.rfc-editor.org/info/rfc8348'>
<front>
<title>A YANG Data Model for Hardware Management</title>
<author fullname='A. Bierman' initials='A.' surname='Bierman'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Dong' initials='J.' surname='Dong'><organization/></author>
<author fullname='D. Romascanu' initials='D.' surname='Romascanu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines a YANG data model for the management of hardware on a single server.</t></abstract>
</front>
<seriesInfo name='RFC' value='8348'/>
<seriesInfo name='DOI' value='10.17487/RFC8348'/>
</reference>



<reference anchor='RFC8342' target='https://www.rfc-editor.org/info/rfc8342'>
<front>
<title>Network Management Datastore Architecture (NMDA)</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' surname='Schoenwaelder'><organization/></author>
<author fullname='P. Shafer' initials='P.' surname='Shafer'><organization/></author>
<author fullname='K. Watsen' initials='K.' surname='Watsen'><organization/></author>
<author fullname='R. Wilton' initials='R.' surname='Wilton'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>Datastores are a fundamental concept binding the data models written in the YANG data modeling language to network management protocols such as the Network Configuration Protocol (NETCONF) and RESTCONF. This document defines an architectural framework for datastores based on the experience gained with the initial simpler model, addressing requirements that were not well supported in the initial model.  This document updates RFC 7950.</t></abstract>
</front>
<seriesInfo name='RFC' value='8342'/>
<seriesInfo name='DOI' value='10.17487/RFC8342'/>
</reference>



<reference anchor='RFC7950' target='https://www.rfc-editor.org/info/rfc7950'>
<front>
<title>The YANG 1.1 Data Modeling Language</title>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<date month='August' year='2016'/>
<abstract><t>YANG is a data modeling language used to model configuration data, state data, Remote Procedure Calls, and notifications for network management protocols.  This document describes the syntax and semantics of version 1.1 of the YANG language.  YANG version 1.1 is a maintenance release of the YANG language, addressing ambiguities and defects in the original specification.  There are a small number of backward incompatibilities from YANG version 1.  This document also specifies the YANG mappings to the Network Configuration Protocol (NETCONF).</t></abstract>
</front>
<seriesInfo name='RFC' value='7950'/>
<seriesInfo name='DOI' value='10.17487/RFC7950'/>
</reference>



<reference anchor='RFC6241' target='https://www.rfc-editor.org/info/rfc6241'>
<front>
<title>Network Configuration Protocol (NETCONF)</title>
<author fullname='R. Enns' initials='R.' role='editor' surname='Enns'><organization/></author>
<author fullname='M. Bjorklund' initials='M.' role='editor' surname='Bjorklund'><organization/></author>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<author fullname='A. Bierman' initials='A.' role='editor' surname='Bierman'><organization/></author>
<date month='June' year='2011'/>
<abstract><t>The Network Configuration Protocol (NETCONF) defined in this document provides mechanisms to install, manipulate, and delete the configuration of network devices.  It uses an Extensible Markup Language (XML)-based data encoding for the configuration data as well as the protocol messages.  The NETCONF protocol operations are realized as remote procedure calls (RPCs).  This document obsoletes RFC 4741.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='6241'/>
<seriesInfo name='DOI' value='10.17487/RFC6241'/>
</reference>



<reference anchor='RFC2119' target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author fullname='S. Bradner' initials='S.' surname='Bradner'><organization/></author>
<date month='March' year='1997'/>
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference anchor='RFC8174' target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author fullname='B. Leiba' initials='B.' surname='Leiba'><organization/></author>
<date month='May' year='2017'/>
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>



<reference anchor='RFC8340' target='https://www.rfc-editor.org/info/rfc8340'>
<front>
<title>YANG Tree Diagrams</title>
<author fullname='M. Bjorklund' initials='M.' surname='Bjorklund'><organization/></author>
<author fullname='L. Berger' initials='L.' role='editor' surname='Berger'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document captures the current syntax used in YANG module tree diagrams.  The purpose of this document is to provide a single location for this definition.  This syntax may be updated from time to time based on the evolution of the YANG language.</t></abstract>
</front>
<seriesInfo name='BCP' value='215'/>
<seriesInfo name='RFC' value='8340'/>
<seriesInfo name='DOI' value='10.17487/RFC8340'/>
</reference>



<reference anchor='RFC6991' target='https://www.rfc-editor.org/info/rfc6991'>
<front>
<title>Common YANG Data Types</title>
<author fullname='J. Schoenwaelder' initials='J.' role='editor' surname='Schoenwaelder'><organization/></author>
<date month='July' year='2013'/>
<abstract><t>This document introduces a collection of common data types to be used with the YANG data modeling language.  This document obsoletes RFC 6021.</t></abstract>
</front>
<seriesInfo name='RFC' value='6991'/>
<seriesInfo name='DOI' value='10.17487/RFC6991'/>
</reference>




    </references>

    <references title='Informative References'>

<reference anchor="ONF_TR-547" target="https://opennetworking.org/wp-content/uploads/2020/08/TR-547-TAPI-v2.1.3-Reference-Implementation-Agreement-1.pdf">
  <front>
    <title>TAPI v2.1.3 Reference Implementation Agreement</title>
    <author >
      <organization>Open Networking Foundation (ONF)</organization>
    </author>
    <date year="2020" month="July"/>
  </front>
  <seriesInfo name="ONF TR-547 TAPI RIA v1.0" value=""/>
</reference>



<reference anchor='I-D.ietf-teas-actn-poi-applicability'>
   <front>
      <title>Applicability of Abstraction and Control of Traffic Engineered Networks (ACTN) to Packet Optical Integration (POI)</title>
      <author fullname='Fabio Peruzzini'>
	 <organization>TIM</organization>
      </author>
      <author fullname='Jean-Francois Bouquier'>
	 <organization>Vodafone</organization>
      </author>
      <author fullname='Italo Busi'>
	 <organization>Huawei</organization>
      </author>
      <author fullname='Daniel King'>
	 <organization>Old Dog Consulting</organization>
      </author>
      <author fullname='Daniele Ceccarelli'>
	 <organization>Ericsson</organization>
      </author>
      <date day='7' month='March' year='2022'/>
      <abstract>
	 <t>   This document considers the applicability of Abstraction and Control
   of TE Networks (ACTN) architecture to Packet Optical Integration
   (POI)in the context of IP/MPLS and optical internetworking. It
   identifies the YANG data models being defined by the IETF to support
   this deployment architecture and specific scenarios relevant for
   Service Providers.

   Existing IETF protocols and data models are identified for each
   multi-layer (packet over optical) scenario with a specific focus on
   the MPI (Multi-Domain Service Coordinator to Provisioning Network
   Controllers Interface)in the ACTN architecture.

	 </t>
      </abstract>
   </front>
   <seriesInfo name='Internet-Draft' value='draft-ietf-teas-actn-poi-applicability-06'/>
   <format target='https://www.ietf.org/archive/id/draft-ietf-teas-actn-poi-applicability-06.txt' type='TXT'/>
</reference>



<reference anchor='RFC8345' target='https://www.rfc-editor.org/info/rfc8345'>
<front>
<title>A YANG Data Model for Network Topologies</title>
<author fullname='A. Clemm' initials='A.' surname='Clemm'><organization/></author>
<author fullname='J. Medved' initials='J.' surname='Medved'><organization/></author>
<author fullname='R. Varga' initials='R.' surname='Varga'><organization/></author>
<author fullname='N. Bahadur' initials='N.' surname='Bahadur'><organization/></author>
<author fullname='H. Ananthakrishnan' initials='H.' surname='Ananthakrishnan'><organization/></author>
<author fullname='X. Liu' initials='X.' surname='Liu'><organization/></author>
<date month='March' year='2018'/>
<abstract><t>This document defines an abstract (generic, or base) YANG data model for network/service topologies and inventories.  The data model serves as a base model that is augmented with technology-specific details in other, more specific topology and inventory data models.</t></abstract>
</front>
<seriesInfo name='RFC' value='8345'/>
<seriesInfo name='DOI' value='10.17487/RFC8345'/>
</reference>




    </references>


<section numbered="false" anchor="acknowledgments"><name>Acknowledgments</name>

<t>The authors of this document would like to thank the authors of <xref target="I-D.ietf-teas-actn-poi-applicability"/> for having identified the gap and requirements to trigger this work.</t>

<t>This document was prepared using kramdown.</t>

</section>


  </back>

<!-- ##markdown-source:
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
Zaxu8S01/wNeoMbtsWgAAA==

-->

</rfc>

